{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","handleSortByChange","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","require","config","Yelp","search","fetch","headers","Authorization","process","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.ef58ae48.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(business => {\n            return <Business business={business} key={business.id} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <button onClick={this.handleSearch}>Let's Go</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","require('dotenv').config()\n\n\n// const apiKey = process.env.API_KEY; // Insert API key here.\n\n// const apiKey = 'ef5GDqXKo-gYP6FjG0s4Ve47C7OHe4PPoUIFyltnJPMG67PWnIY4MnWdOyRPRJlcfluV3slRPHzm9bfhn_XTr_gcQXR03rALQUMZsIprExElL6xXpUx9P66voWgBW3Yx'; // Insert API key here.\n\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      }\n    });\n  }\n};\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}